# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xqLrKsNkKLd1fYIlZep1DIXYt-QwEcS-
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.metrics import mean_absolute_error

# Carga del Dataset
url = "https://raw.githubusercontent.com/selva86/datasets/master/Advertising.csv"
df = pd.read_csv(url)

df.columns = df.columns.str.lower()
medios = ['tv', 'radio', 'newspaper']


#print("Vista del dataset")
#print(df.head(), "\n")

# Limpieza
print("Valores por columna")
print(df.isnull().sum(), "\n")

# Separaci칩n de las variables (dependiente e indpendiente)
x = df[['tv', 'radio', 'newspaper']]
y = df['sales']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# Creaci칩n y entreanamiento del modelo
model = LinearRegression()
model.fit(x_train, y_train)

# predicci칩n del modelo
y_pred = model.predict(x_test)

mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)

print(f"MSE: {mse:.3f}")
print(f"RMSE: {rmse:.3f}")
print(f"R^2: {r2:.3f}\n")
print(f"MAE  = {mae:.3f}")

# Gr치ficas
medios = ['tv', 'radio', 'newspaper']

plt.figure(figsize=(10, 5))
for i, medio in enumerate(medios):
    plt.subplot(1, 3, i+1)
    plt.scatter(df[medio], df['sales'], alpha = 0.6, color = 'cyan')

    # Modelo simple por cada variable
    modelo_simple = LinearRegression()
    x_medio = df[[medio]]
    modelo_simple.fit(x_medio, y)
    y_pred_medio = modelo_simple.predict(x_medio)

    plt.plot(df[medio], y_pred_medio, color = 'red')

    plt.title(f'{medio.capitalize()} vs Ventas')
    plt.xlabel(medio)
    plt.ylabel('Ventas')

plt.tight_layout()
plt.show()

